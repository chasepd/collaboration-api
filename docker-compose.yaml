version: '3.8'

services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "80:8080"
    networks:
      - backend

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}

  comments:
    build:
      context: ./comments
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  nlp:
    build:
      context: ./nlp
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - backend

  notifications:
    build:
      context: ./notifications
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  projects:
    build:
      context: ./projects
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  tasks:
    build:
      context: ./tasks
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: task_management
    networks:
      - backend
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-p${MYSQL_ROOT_PASSWORD}", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  backend:
    driver: bridge

volumes:
  db_data:
